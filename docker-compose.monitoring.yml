version: '3.8'

services:
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: petpro-prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - petpro-monitoring
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    user: "nobody"
    security_opt:
      - no-new-privileges:true

  grafana:
    image: grafana/grafana:10.1.0
    container_name: petpro-grafana
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
    ports:
      - "3001:3000"
    restart: unless-stopped
    networks:
      - petpro-monitoring
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    user: "472"
    security_opt:
      - no-new-privileges:true

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.14.0
    container_name: petpro-postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_EXPORTER_USER:-postgres_exporter}:${POSTGRES_EXPORTER_PASSWORD:-password}@postgres:5432/postgres?sslmode=disable
    ports:
      - "9187:9187"
    restart: unless-stopped
    networks:
      - petpro-backend
      - petpro-monitoring
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9187/metrics"]
      interval: 30s
      timeout: 5s
      retries: 3
    user: "nobody"
    security_opt:
      - no-new-privileges:true

  redis-exporter:
    image: oliver006/redis_exporter:v1.54.0
    container_name: petpro-redis-exporter
    environment:
      - REDIS_ADDR=redis://redis:6379
    ports:
      - "9121:9121"
    restart: unless-stopped
    networks:
      - petpro-backend
      - petpro-monitoring
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9121/metrics"]
      interval: 30s
      timeout: 5s
      retries: 3
    user: "nobody"
    security_opt:
      - no-new-privileges:true

  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: petpro-node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - petpro-monitoring
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
    user: "nobody"
    security_opt:
      - no-new-privileges:true

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  petpro-backend:
    external: true
  petpro-monitoring:
    driver: bridge
