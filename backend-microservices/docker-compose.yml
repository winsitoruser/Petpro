version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: petpro-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_MULTIPLE_DATABASES: "petpro_auth_dev,petpro_user_dev,petpro_booking_dev,petpro_product_dev,petpro_order_dev,petpro_payment_dev,petpro_admin_dev"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker-config/postgres:/docker-entrypoint-initdb.d
    networks:
      - petpro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: petpro-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - petpro-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5


  api-gateway:
    build:
      context: ./api-gateway
      target: development
    container_name: petpro-api-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./api-gateway:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - CORS_ORIGIN=http://localhost:3010
      - AUTH_SERVICE_URL=http://auth-service:3001
      - BOOKING_SERVICE_URL=http://booking-service:3002
      - INVENTORY_SERVICE_URL=http://inventory-service:3003
      - VENDOR_SERVICE_URL=http://vendor-service:3006
      - JWT_SECRET=api_jwt_secret_key_change_in_production
      - JWT_EXPIRATION=86400
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
    depends_on:
      - auth-service
      - booking-service
      - inventory-service
      - postgres
      - redis
    networks:
      - petpro-network
    command: npm run start:dev

  auth-service:
    build:
      context: ./auth-service
      target: development
    container_name: petpro-auth-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - ./auth-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - API_PREFIX=/api/v1
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3010
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=petpro_auth_dev
      - JWT_SECRET=dev_jwt_secret_key_change_in_production
      - JWT_EXPIRATION=86400
      - JWT_REFRESH_SECRET=dev_jwt_refresh_secret_key_change_in_production
      - JWT_REFRESH_EXPIRATION=604800
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - petpro-network
    command: npm run start:dev

  admin-service:
    build:
      context: ./admin-service
      target: development
    container_name: petpro-admin-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    volumes:
      - ./admin-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3005
      - API_PREFIX=/api/v1
      - CORS_ORIGIN=http://localhost:3004,http://localhost:3010
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=petpro_admin_dev
      - JWT_SECRET=admin_jwt_secret_key_change_in_production
      - JWT_EXPIRATION=86400
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - petpro-network
    command: npm run start:dev

  admin-gateway:
    build:
      context: ./admin-gateway
      target: development
    container_name: petpro-admin-gateway
    restart: unless-stopped
    ports:
      - "3004:3004"
    volumes:
      - ./admin-gateway:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3004
      - CORS_ORIGIN=http://localhost:3010
      - ADMIN_SERVICE_URL=http://admin-service:3005
      - AUTH_SERVICE_URL=http://auth-service:3001
      - BOOKING_SERVICE_URL=http://booking-service:3002
      - INVENTORY_SERVICE_URL=http://inventory-service:3003
      - VENDOR_SERVICE_URL=http://vendor-service:3006
      - JWT_SECRET=admin_jwt_secret_key_change_in_production
      - JWT_EXPIRATION=86400
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
      - ADMIN_FRONTEND_URL=http://localhost:3010
    depends_on:
      - admin-service
      - postgres
      - redis
    networks:
      - petpro-network
    command: npm run start:dev

  booking-service:
    build:
      context: ./booking-service
      target: development
    container_name: petpro-booking-service
    restart: unless-stopped
    ports:
      - "3002:3002"
    volumes:
      - ./booking-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3002
      - API_PREFIX=/api/v1
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3010
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=petpro_booking_dev
      - JWT_SECRET=dev_jwt_secret_key_change_in_production
      - JWT_EXPIRATION=86400
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AUTH_SERVICE_URL=http://auth-service:3001
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - petpro-network
    command: npm run start:dev

  inventory-service:
    build:
      context: ./inventory-service
      target: development
    container_name: petpro-inventory-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    volumes:
      - ./inventory-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=petpro_product_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - petpro-network
    command: npm run start:dev

volumes:
  postgres-data:
  redis-data:

networks:
  petpro-network:
    driver: bridge
