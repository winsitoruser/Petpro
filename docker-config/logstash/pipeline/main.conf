input {
  # TCP input for structured JSON logs from applications
  tcp {
    port => 5000
    codec => json
    tags => ["application"]
  }

  # UDP input for syslog messages
  udp {
    port => 5000
    codec => json
    tags => ["application"]
  }

  # Filebeat input for shipping logs from containers
  beats {
    port => 5044
    tags => ["filebeat"]
  }
}

filter {
  # Add timestamp for all events
  date {
    match => [ "timestamp", "ISO8601" ]
    target => "@timestamp"
  }

  # Extract service name from log message
  if [service] {
    mutate {
      add_field => { "[@metadata][service]" => "%{service}" }
    }
  }

  # Process structured logs
  if "application" in [tags] {
    # Parse JSON if not already parsed by codec
    if [message] =~ /^\{.*\}$/ {
      json {
        source => "message"
      }
    }

    # Add host information
    mutate {
      add_field => { "host_ip" => "%{[host][ip]}" }
    }

    # Extract log level for better filtering
    if [level] {
      mutate {
        add_field => { "log_level" => "%{level}" }
      }
    }
    
    # Add alert flag for critical errors
    if [level] == "error" or [level] == "fatal" or [level] == "critical" {
      mutate {
        add_field => { "alert" => true }
      }
    }
  }

  # Process logs shipped by Filebeat
  if "filebeat" in [tags] {
    # Extract container information
    if [container] {
      mutate {
        add_field => { "container_name" => "%{[container][name]}" }
        add_field => { "container_id" => "%{[container][id]}" }
      }
    }
  }
}

output {
  # Send all logs to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "petpro-%{[@metadata][service]}-%{+YYYY.MM.dd}"
    document_type => "_doc"
    manage_template => false
    action => "index"
    user => "${ELASTICSEARCH_USERNAME}"
    password => "${ELASTICSEARCH_PASSWORD}"
    ssl => false
    ilm_enabled => true
    ilm_rollover_alias => "petpro-logs"
    ilm_pattern => "{now/d}-000001"
    ilm_policy => "petpro-logs-policy"
  }

  # Send alerts to a separate index
  if [alert] == true {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "petpro-alerts-%{+YYYY.MM.dd}"
      document_type => "_doc"
      user => "${ELASTICSEARCH_USERNAME}"
      password => "${ELASTICSEARCH_PASSWORD}"
      ssl => false
    }
  }

  # Send logs to a dead letter queue if they fail
  dead_letter_queue {
    path => "/usr/share/logstash/data/dead_letter_queue"
    max_bytes => 1073741824  # 1GB
  }

  # Optional stdout output for debugging (can be disabled in production)
  if [log_level] == "debug" {
    stdout {
      codec => rubydebug
    }
  }
}
